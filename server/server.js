// Generated by CoffeeScript 1.6.1
(function() {
  var appLogger, bunyan, config, connect, io, port, restify, routes, server, serverName, socketio, soohtsdb, util;

  restify = require('restify');

  connect = require('connect');

  bunyan = require('bunyan');

  socketio = require('socket.io');

  util = require('util');

  routes = require('./routes');

  config = require('./config');

  soohtsdb = config.soohts;

  serverName = soohtsdb.settings.db[0].toUpperCase() + soohtsdb.settings.db.slice(1);

  port = 8124;

  soohtsdb.init();

  module.exports.appLogger = appLogger = bunyan.createLogger({
    name: serverName + ' RESTful Server',
    level: process.env.LOG_LEVEL || 'warn',
    stream: process.stdout,
    serializers: bunyan.stdSerializers
  });

  module.exports.server = server = restify.createServer({
    name: serverName,
    log: appLogger,
    version: '0.0.1'
  });

  server.use(restify.acceptParser(server.acceptable));

  server.use(restify.queryParser());

  server.use(restify.bodyParser());

  server.use(function(req, res, next) {
    res.header("Access-Control-Allow-Origin", "*");
    res.header("Access-Control-Allow-Headers", "X-Requested-With, Content-Type");
    res.header("Access-Control-Allow-Methods", "POST, GET, PUT, DELETE, OPTIONS");
    return next();
  });

  server.use(restify.fullResponse());

  server.on('after', restify.auditLogger({
    log: appLogger
  }));

  server.opts(/\.*/, function(req, res, next) {
    res.send(200);
    return next();
  });

  server.get("/", routes.index);

  server.get("/api/response.json?:queryString", routes.queryFilters);

  server.get("/api/twitter/stream", function(req, res, next) {
    res.send(req.url);
    return next();
  });

  module.exports.io = io = socketio.listen(server);

  io.set('log level', 1);

  io.sockets.on('connection', function(socket) {
    return socket.emit('news', '@alvaromuir says, "The server is ready."');
  });

  server.listen(port, function() {
    return console.log('%s listening at %s', server.name, server.url);
  });

}).call(this);
